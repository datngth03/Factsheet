using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq.Dynamic.Core;
using Microsoft.AspNetCore.Authorization;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
using Sabeco_Factsheet.Permissions;
using Sabeco_Factsheet.TbUserInRoles;
using MiniExcelLibs;
using Volo.Abp.Content;
using Volo.Abp.Authorization;
using Volo.Abp.Caching;
using Microsoft.Extensions.Caching.Distributed;
using Sabeco_Factsheet.Shared;

namespace Sabeco_Factsheet.TbUserInRoles
{
    public class TbUserInRolesAppService : TbUserInRolesAppServiceBase, ITbUserInRolesAppService
    {
        //<suite-custom-code-autogenerated>
        public TbUserInRolesAppService(ITbUserInRoleRepository tbUserInRoleRepository, TbUserInRoleManager tbUserInRoleManager, IDistributedCache<TbUserInRoleDownloadTokenCacheItem, string> downloadTokenCache)
            : base(tbUserInRoleRepository, tbUserInRoleManager, downloadTokenCache)
        {
        }
        //HQSOFT's generated code:
        public virtual async Task<List<TbUserInRoleDto>> GetListNoPagedAsync(GetTbUserInRolesInput input)
        {
            var items = await _tbUserInRoleRepository.GetListNoPagedAsync(input.FilterText, input.RoleIdMin, input.RoleIdMax, input.UserIdMin, input.UserIdMax, input.IsActive, input.crt_dateMin, input.crt_dateMax, input.crt_userMin, input.crt_userMax, input.mod_dateMin, input.mod_dateMax, input.mod_userMin, input.mod_userMax, input.Sorting);

            return ObjectMapper.Map<List<TbUserInRole>, List<TbUserInRoleDto>>(items);
        }
        //</suite-custom-code-autogenerated>

        //Write your custom code...
    }
}