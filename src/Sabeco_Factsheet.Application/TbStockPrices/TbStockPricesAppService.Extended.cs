using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq.Dynamic.Core;
using Microsoft.AspNetCore.Authorization;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
using Sabeco_Factsheet.Permissions;
using Sabeco_Factsheet.TbStockPrices;
using MiniExcelLibs;
using Volo.Abp.Content;
using Volo.Abp.Authorization;
using Volo.Abp.Caching;
using Microsoft.Extensions.Caching.Distributed;
using Sabeco_Factsheet.Shared;

namespace Sabeco_Factsheet.TbStockPrices
{
    public class TbStockPricesAppService : TbStockPricesAppServiceBase, ITbStockPricesAppService
    {
        //<suite-custom-code-autogenerated>
        public TbStockPricesAppService(ITbStockPriceRepository tbStockPriceRepository, TbStockPriceManager tbStockPriceManager, IDistributedCache<TbStockPriceDownloadTokenCacheItem, string> downloadTokenCache)
            : base(tbStockPriceRepository, tbStockPriceManager, downloadTokenCache)
        {
        }
        //HQSOFT's generated code:
        public virtual async Task<List<TbStockPriceDto>> GetListNoPagedAsync(GetTbStockPricesInput input)
        {
            var items = await _tbStockPriceRepository.GetListNoPagedAsync(input.FilterText, input.StockCode, input.StockDateMin, input.StockDateMax, input.LimitUpPriceMin, input.LimitUpPriceMax, input.LimitDownPriceMin, input.LimitDownPriceMax, input.ReferencePriceMin, input.ReferencePriceMax, input.SaleQty1Min, input.SaleQty1Max, input.SalePrice1Min, input.SalePrice1Max, input.SaleQty2Min, input.SaleQty2Max, input.SalePrice2Min, input.SalePrice2Max, input.SaleQty3Min, input.SaleQty3Max, input.SalePrice3Min, input.SalePrice3Max, input.BuyQty1Min, input.BuyQty1Max, input.BuyPrice1Min, input.BuyPrice1Max, input.BuyQty2Min, input.BuyQty2Max, input.BuyPrice2Min, input.BuyPrice2Max, input.BuyQty3Min, input.BuyQty3Max, input.BuyPrice3Min, input.BuyPrice3Max, input.TransactionPriceMin, input.TransactionPriceMax, input.TransactionQtyMin, input.TransactionQtyMax, input.TotalQtyMin, input.TotalQtyMax, input.IsActive, input.crt_dateMin, input.crt_dateMax, input.crt_userMin, input.crt_userMax, input.Sorting);

            return ObjectMapper.Map<List<TbStockPrice>, List<TbStockPriceDto>>(items);
        }
        //</suite-custom-code-autogenerated>

        //Write your custom code...
    }
}