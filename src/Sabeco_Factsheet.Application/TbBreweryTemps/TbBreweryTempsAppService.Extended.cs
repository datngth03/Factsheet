using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq.Dynamic.Core;
using Microsoft.AspNetCore.Authorization;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
using Sabeco_Factsheet.Permissions;
using Sabeco_Factsheet.TbBreweryTemps;
using MiniExcelLibs;
using Volo.Abp.Content;
using Volo.Abp.Authorization;
using Volo.Abp.Caching;
using Microsoft.Extensions.Caching.Distributed;
using Sabeco_Factsheet.Shared;

namespace Sabeco_Factsheet.TbBreweryTemps
{
    public class TbBreweryTempsAppService : TbBreweryTempsAppServiceBase, ITbBreweryTempsAppService
    {
        //<suite-custom-code-autogenerated>
        public TbBreweryTempsAppService(ITbBreweryTempRepository tbBreweryTempRepository, TbBreweryTempManager tbBreweryTempManager, IDistributedCache<TbBreweryTempDownloadTokenCacheItem, string> downloadTokenCache)
            : base(tbBreweryTempRepository, tbBreweryTempManager, downloadTokenCache)
        {
        }
        //HQSOFT's generated code:
        public virtual async Task<List<TbBreweryTempDto>> GetListNoPagedAsync(GetTbBreweryTempsInput input)
        {
            var items = await _tbBreweryTempRepository.GetListNoPagedAsync(input.FilterText, input.idBreweryMin, input.idBreweryMax, input.BreweryCode, input.BreweryName, input.BreweryName_EN, input.BriefName, input.BreweryAdress, input.CompanyIdMin, input.CompanyIdMax, input.CapacityVolumeMin, input.CapacityVolumeMax, input.DeliveryVolumeMin, input.DeliveryVolumeMax, input.Note, input.DocStatusMin, input.DocStatusMax, input.isActive, input.create_userMin, input.create_userMax, input.create_dateMin, input.create_dateMax, input.mod_userMin, input.mod_userMax, input.mod_dateMin, input.mod_dateMax, input.Sorting);

            return ObjectMapper.Map<List<TbBreweryTemp>, List<TbBreweryTempDto>>(items);
        }
        //</suite-custom-code-autogenerated>

        //Write your custom code...
    }
}