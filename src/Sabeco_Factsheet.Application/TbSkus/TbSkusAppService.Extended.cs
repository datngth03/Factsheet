using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq.Dynamic.Core;
using Microsoft.AspNetCore.Authorization;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
using Sabeco_Factsheet.Permissions;
using Sabeco_Factsheet.TbSkus;
using MiniExcelLibs;
using Volo.Abp.Content;
using Volo.Abp.Authorization;
using Volo.Abp.Caching;
using Microsoft.Extensions.Caching.Distributed;
using Sabeco_Factsheet.Shared;

namespace Sabeco_Factsheet.TbSkus
{
    public class TbSkusAppService : TbSkusAppServiceBase, ITbSkusAppService
    {
        //<suite-custom-code-autogenerated>
        public TbSkusAppService(ITbSkuRepository tbSkuRepository, TbSkuManager tbSkuManager, IDistributedCache<TbSkuDownloadTokenCacheItem, string> downloadTokenCache)
            : base(tbSkuRepository, tbSkuManager, downloadTokenCache)
        {
        }
        //HQSOFT's generated code:
        public virtual async Task<List<TbSkuDto>> GetListNoPagedAsync(GetTbSkusInput input)
        {
            var items = await _tbSkuRepository.GetListNoPagedAsync(input.FilterText, input.Code, input.Name, input.Name_EN, input.BrandCode, input.Unit, input.ItemBaseType, input.PackSizeMin, input.PackSizeMax, input.PackQuantityMin, input.PackQuantityMax, input.WeightMin, input.WeightMax, input.ExpiryDateMin, input.ExpiryDateMax, input.IsActive, input.crt_userMin, input.crt_userMax, input.crt_dateMin, input.crt_dateMax, input.mod_userMin, input.mod_userMax, input.mod_dateMin, input.mod_dateMax, input.Sorting);

            return ObjectMapper.Map<List<TbSku>, List<TbSkuDto>>(items);
        }
        //</suite-custom-code-autogenerated>

        //Write your custom code...
    }
}