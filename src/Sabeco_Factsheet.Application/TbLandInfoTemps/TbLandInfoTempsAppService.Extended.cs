using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq.Dynamic.Core;
using Microsoft.AspNetCore.Authorization;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
using Sabeco_Factsheet.Permissions;
using Sabeco_Factsheet.TbLandInfoTemps;
using MiniExcelLibs;
using Volo.Abp.Content;
using Volo.Abp.Authorization;
using Volo.Abp.Caching;
using Microsoft.Extensions.Caching.Distributed;
using Sabeco_Factsheet.Shared;

namespace Sabeco_Factsheet.TbLandInfoTemps
{
    public class TbLandInfoTempsAppService : TbLandInfoTempsAppServiceBase, ITbLandInfoTempsAppService
    {
        //<suite-custom-code-autogenerated>
        public TbLandInfoTempsAppService(ITbLandInfoTempRepository tbLandInfoTempRepository, TbLandInfoTempManager tbLandInfoTempManager, IDistributedCache<TbLandInfoTempDownloadTokenCacheItem, string> downloadTokenCache)
            : base(tbLandInfoTempRepository, tbLandInfoTempManager, downloadTokenCache)
        {
        }
        //HQSOFT's generated code:
        public virtual async Task<List<TbLandInfoTempDto>> GetListNoPagedAsync(GetTbLandInfoTempsInput input)
        {
            var items = await _tbLandInfoTempRepository.GetListNoPagedAsync(input.FilterText, input.CompanyIdMin, input.CompanyIdMax, input.Description, input.Address, input.TypeOfLand, input.AreaMin, input.AreaMax, input.SupportingDocument, input.IssueDateMin, input.IssueDateMax, input.ExpiryDateMin, input.ExpiryDateMax, input.Payment, input.Remark, input.IsActive, input.create_userMin, input.create_userMax, input.create_dateMin, input.create_dateMax, input.mod_userMin, input.mod_userMax, input.mod_dateMin, input.mod_dateMax, input.Sorting);

            return ObjectMapper.Map<List<TbLandInfoTemp>, List<TbLandInfoTempDto>>(items);
        }
        //</suite-custom-code-autogenerated>

        //Write your custom code...
    }
}