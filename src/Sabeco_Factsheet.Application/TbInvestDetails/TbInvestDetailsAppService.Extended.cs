using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq.Dynamic.Core;
using Microsoft.AspNetCore.Authorization;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
using Sabeco_Factsheet.Permissions;
using Sabeco_Factsheet.TbInvestDetails;
using MiniExcelLibs;
using Volo.Abp.Content;
using Volo.Abp.Authorization;
using Volo.Abp.Caching;
using Microsoft.Extensions.Caching.Distributed;
using Sabeco_Factsheet.Shared;

namespace Sabeco_Factsheet.TbInvestDetails
{
    public class TbInvestDetailsAppService : TbInvestDetailsAppServiceBase, ITbInvestDetailsAppService
    {
        //<suite-custom-code-autogenerated>
        public TbInvestDetailsAppService(ITbInvestDetailRepository tbInvestDetailRepository, TbInvestDetailManager tbInvestDetailManager, IDistributedCache<TbInvestDetailDownloadTokenCacheItem, string> downloadTokenCache)
            : base(tbInvestDetailRepository, tbInvestDetailManager, downloadTokenCache)
        {
        }
        //HQSOFT's generated code:
        public virtual async Task<List<TbInvestDetailDto>> GetListNoPagedAsync(GetTbInvestDetailsInput input)
        {
            var items = await _tbInvestDetailRepository.GetListNoPagedAsync(input.FilterText, input.ParentIdMin, input.ParentIdMax, input.DocDateMin, input.DocDateMax, input.DocNo, input.InvestTypeMin, input.InvestTypeMax, input.ShareNumMin, input.ShareNumMax, input.ShareValueMin, input.ShareValueMax, input.Note, input.IsActive, input.crt_dateMin, input.crt_dateMax, input.crt_userMin, input.crt_userMax, input.mod_dateMin, input.mod_dateMax, input.mod_userMin, input.mod_userMax, input.IsDeleted, input.Sorting);

            return ObjectMapper.Map<List<TbInvestDetail>, List<TbInvestDetailDto>>(items);
        }
        //</suite-custom-code-autogenerated>

        //Write your custom code...
    }
}