// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sabeco_Factsheet.EntityFrameworkCore;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace Sabeco_Factsheet.Migrations
{
    [DbContext(typeof(Sabeco_FactsheetDbContext))]
    [Migration("20240804151246_UpdateFileUpload")]
    partial class UpdateFileUpload
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sabeco_Factsheet.FileDescriptors.FileDescriptor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileDescriptor", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbAdditionInfoTemps.TbAdditionInfoTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DocDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("NoOfDocument")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NoOfDocument");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remark");

                    b.Property<string>("TypeOfEvent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TypeOfEvent");

                    b.Property<string>("TypeOfGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TypeOfGroup");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbAdditionInfo_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbAdditionInfos.TbAdditionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DocDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("NoOfDocument")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NoOfDocument");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remark");

                    b.Property<string>("TypeOfEvent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TypeOfEvent");

                    b.Property<string>("TypeOfGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TypeOfGroup");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbAdditionInfo", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbAssets.TbAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("AssetAddress");

                    b.Property<string>("AssetItem")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("AssetItem");

                    b.Property<string>("AssetType")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("AssetType");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DocDate");

                    b.Property<string>("DocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DocNo");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpireDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Quantity");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbAsset", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbBranchs.TbBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BriefName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BriefName");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Code");

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CompanyCode");

                    b.Property<DateTime?>("Crt_Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Crt_Date");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.Property<string>("Name_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name_EN");

                    b.HasKey("Id");

                    b.ToTable("tbBranch", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbBreweries.TbBrewery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryAdress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BreweryAdress");

                    b.Property<string>("BreweryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BreweryCode");

                    b.Property<string>("BreweryName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("BreweryName");

                    b.Property<string>("BreweryName_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("BreweryName_EN");

                    b.Property<string>("BriefName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BriefName");

                    b.Property<decimal?>("CapacityVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CapacityVolume");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<decimal?>("DeliveryVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DeliveryVolume");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Note");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbBrewery", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbBreweryDeliveryVolumeTemps.TbBreweryDeliveryVolumeTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BreweryCode");

                    b.Property<int?>("BreweryId")
                        .HasColumnType("int")
                        .HasColumnName("BreweryId");

                    b.Property<decimal?>("DeliveryVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DeliveryVolume");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<int?>("idBreweryDeliveryVolume")
                        .HasColumnType("int")
                        .HasColumnName("idBreweryDeliveryVolume");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId", "Year")
                        .IsUnique()
                        .HasFilter("[BreweryId] IS NOT NULL AND [Year] IS NOT NULL");

                    b.ToTable("tbBreweryDeliveryVolume_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbBreweryDeliveryVolumes.TbBreweryDeliveryVolume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BreweryCode");

                    b.Property<int?>("BreweryId")
                        .HasColumnType("int")
                        .HasColumnName("BreweryId");

                    b.Property<decimal?>("DeliveryVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DeliveryVolume");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId", "Year")
                        .IsUnique()
                        .HasFilter("[BreweryId] IS NOT NULL AND [Year] IS NOT NULL");

                    b.ToTable("tbBreweryDeliveryVolume", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbBreweryImages.TbBreweryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BreweryImage");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageLink");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbBreweryImage", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbBrewerySkuTemps.TbBrewerySkuTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BreweryCode");

                    b.Property<int?>("BreweryId")
                        .HasColumnType("int")
                        .HasColumnName("BreweryId");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<decimal?>("ProductionVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ProductionVolume");

                    b.Property<string>("SKUCode")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("SKUCode");

                    b.Property<int?>("SKUId")
                        .HasColumnType("int")
                        .HasColumnName("SKUId");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<int?>("idBrewerySKU")
                        .HasColumnType("int")
                        .HasColumnName("idBrewerySKU");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId", "SKUId", "Year")
                        .IsUnique()
                        .HasFilter("[BreweryId] IS NOT NULL AND [SKUId] IS NOT NULL AND [Year] IS NOT NULL");

                    b.ToTable("tbBrewerySKU_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbBrewerySkus.TbBrewerySku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BreweryCode");

                    b.Property<int?>("BreweryId")
                        .HasColumnType("int")
                        .HasColumnName("BreweryId");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<decimal?>("ProductionVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ProductionVolume");

                    b.Property<string>("SKUCode")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("SKUCode");

                    b.Property<int?>("SKUId")
                        .HasColumnType("int")
                        .HasColumnName("SKUId");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId", "SKUId", "Year")
                        .IsUnique()
                        .HasFilter("[BreweryId] IS NOT NULL AND [SKUId] IS NOT NULL AND [Year] IS NOT NULL");

                    b.ToTable("tbBrewerySKU", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbBreweryTemps.TbBreweryTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryAdress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BreweryAdress");

                    b.Property<string>("BreweryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BreweryCode");

                    b.Property<string>("BreweryName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("BreweryName");

                    b.Property<string>("BreweryName_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("BreweryName_EN");

                    b.Property<string>("BriefName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BriefName");

                    b.Property<decimal?>("CapacityVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CapacityVolume");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<decimal?>("DeliveryVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DeliveryVolume");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Note");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<int>("idBrewery")
                        .HasColumnType("int")
                        .HasColumnName("idBrewery");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbBrewery_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanies.TbCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BravoCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("BravoCode");

                    b.Property<string>("BriefName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BriefName");

                    b.Property<decimal?>("CharteredCapital")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CharteredCapital");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("CompanyType");

                    b.Property<string>("ConsolidateNoted")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConsolidateNoted");

                    b.Property<decimal?>("ConsolidatedShareholding")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ConsolidatedShareholding");

                    b.Property<string>("ContactDept1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactDept1");

                    b.Property<string>("ContactDept2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactDept2");

                    b.Property<string>("ContactInfo_01")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactInfo_01");

                    b.Property<string>("ContactInfo_02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactInfo_02");

                    b.Property<string>("ContactInfo_03")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactInfo_03");

                    b.Property<string>("ContactInfo_04")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactInfo_04");

                    b.Property<string>("ContactInfo_05")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactInfo_05");

                    b.Property<string>("ContactInfo_06")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ContactInfo_06");

                    b.Property<string>("ContactMail1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactMail1");

                    b.Property<string>("ContactMail2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactMail2");

                    b.Property<string>("ContactName1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactName1");

                    b.Property<string>("ContactName2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactName2");

                    b.Property<string>("ContactPhone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactPhone1");

                    b.Property<string>("ContactPhone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactPhone2");

                    b.Property<string>("ContactPosition1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactPosition1");

                    b.Property<string>("ContactPosition2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactPosition2");

                    b.Property<decimal?>("DirectShareholding")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DirectShareholding");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit")
                        .HasColumnName("IsGroup");

                    b.Property<bool?>("IsPublicCompany")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublicCompany");

                    b.Property<DateTime?>("LatestAmendment")
                        .HasColumnType("datetime2")
                        .HasColumnName("LatestAmendment");

                    b.Property<string>("LegacyCode")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("LegacyCode");

                    b.Property<string>("LegalRepresent")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LegalRepresent");

                    b.Property<string>("License")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("License");

                    b.Property<string>("LicenseNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LicenseNo");

                    b.Property<decimal?>("ListedShare")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ListedShare");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.Property<string>("Name_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name_EN");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<int?>("ParValue")
                        .HasColumnType("int")
                        .HasColumnName("ParValue");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentId");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate");

                    b.Property<DateTime?>("RegistrationDate0")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate0");

                    b.Property<byte?>("RegistrationOrder")
                        .HasColumnType("tinyint")
                        .HasColumnName("RegistrationOrder");

                    b.Property<string>("StockCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("StockCode");

                    b.Property<string>("StockExchange")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("StockExchange");

                    b.Property<DateTime?>("StockRegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StockRegistrationDate");

                    b.Property<decimal?>("TotalShare")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalShare");

                    b.Property<decimal?>("VotingRightDirect")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VotingRightDirect");

                    b.Property<decimal?>("VotingRightTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VotingRightTotal");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<int?>("idCompanyType")
                        .HasColumnType("int")
                        .HasColumnName("idCompanyType");

                    b.Property<double?>("latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double?>("longtitude")
                        .HasColumnType("float")
                        .HasColumnName("longtitude");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompany", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyBoards.TbCompanyBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("BranchCode");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CompanyCode");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FromDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<int?>("OwnerValue")
                        .HasColumnType("int")
                        .HasColumnName("OwnerValue");

                    b.Property<string>("PersonCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PersonCode");

                    b.Property<int?>("PersonalValue")
                        .HasColumnType("int")
                        .HasColumnName("PersonalValue");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PositionCode");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ToDate");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyBoard", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyBranchImages.TbCompanyBranchImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BranchImage");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageLink");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyBranchImage", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyBranchTemps.TbCompanyBranchTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BranchAddress");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BranchCode");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BranchName");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ContactPerson");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ContactPhone");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyBranch_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyBranchs.TbCompanyBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BranchAddress");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BranchCode");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BranchName");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ContactPerson");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ContactPhone");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyBranch", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyBusinessDetailTemps.TbCompanyBusinessDetailTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentId");

                    b.Property<string>("RegistrationCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("RegistrationCode");

                    b.Property<string>("RegistrationName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("RegistrationName");

                    b.Property<string>("RegistrationName_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("RegistrationName_EN");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyBusinessDetail_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyBusinessDetails.TbCompanyBusinessDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentId");

                    b.Property<string>("RegistrationCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("RegistrationCode");

                    b.Property<string>("RegistrationName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("RegistrationName");

                    b.Property<string>("RegistrationName_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("RegistrationName_EN");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyBusinessDetail", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyBusinessTemps.TbCompanyBusinessTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CompanyAddress");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CompanyName");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CompanyType");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("LatestAmendment")
                        .HasColumnType("datetime2")
                        .HasColumnName("LatestAmendment");

                    b.Property<string>("LegalRepresent")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LegalRepresent");

                    b.Property<string>("License")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("License");

                    b.Property<string>("MajorBusiness")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("MajorBusiness");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<string>("OtherActivity")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("OtherActivity");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate");

                    b.Property<byte>("RegistrationNo")
                        .HasColumnType("tinyint")
                        .HasColumnName("RegistrationNo");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyBusiness_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyBusinesses.TbCompanyBusiness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CompanyAddress");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CompanyName");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CompanyType");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("LatestAmendment")
                        .HasColumnType("datetime2")
                        .HasColumnName("LatestAmendment");

                    b.Property<string>("LegalRepresent")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LegalRepresent");

                    b.Property<string>("License")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("License");

                    b.Property<string>("MajorBusiness")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("MajorBusiness");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<string>("OtherActivity")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("OtherActivity");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate");

                    b.Property<byte>("RegistrationNo")
                        .HasColumnType("tinyint")
                        .HasColumnName("RegistrationNo");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyBusiness", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyInvestTemps.TbCompanyInvestTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyName");

                    b.Property<decimal?>("Holding")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Holding");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<decimal?>("Shares")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Shares");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyInvest_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyInvests.TbCompanyInvest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyName");

                    b.Property<decimal?>("Holding")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Holding");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<decimal?>("Shares")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Shares");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyInvest", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyMajorTemps.TbCompanyMajorTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassId");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FromDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<string>("ShareHolderMajor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ShareHolderMajor");

                    b.Property<decimal?>("ShareHolderRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ShareHolderRate");

                    b.Property<string>("ShareHolderType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ShareHolderType");

                    b.Property<decimal?>("ShareHolderValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ShareHolderValue");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ToDate");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyMajor_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyMajors.TbCompanyMajor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassId");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FromDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<string>("ShareHolderMajor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ShareHolderMajor");

                    b.Property<decimal?>("ShareHolderRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ShareHolderRate");

                    b.Property<string>("ShareHolderType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ShareHolderType");

                    b.Property<decimal?>("ShareHolderValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ShareHolderValue");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ToDate");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyMajor", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyMappingTemps.TbCompanyMappingTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("CompanyTypeShareholdingCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyTypeShareholdingCode");

                    b.Property<string>("CompanyTypesCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyTypesCode");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Note");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<int?>("idCompanyTypeShareholdingCode")
                        .HasColumnType("int")
                        .HasColumnName("idCompanyTypeShareholdingCode");

                    b.Property<int?>("idCompanyTypesCode")
                        .HasColumnType("int")
                        .HasColumnName("idCompanyTypesCode");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyMapping_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyMappings.TbCompanyMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("CompanyTypeShareholdingCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyTypeShareholdingCode");

                    b.Property<string>("CompanyTypesCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyTypesCode");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Note");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<int?>("idCompanyTypeShareholdingCode")
                        .HasColumnType("int")
                        .HasColumnName("idCompanyTypeShareholdingCode");

                    b.Property<int?>("idCompanyTypesCode")
                        .HasColumnType("int")
                        .HasColumnName("idCompanyTypesCode");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyMapping", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyMemberCouncilTerms.TbCompanyMemberCouncilTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<int?>("TermEnd")
                        .HasColumnType("int")
                        .HasColumnName("TermEnd");

                    b.Property<int?>("TermFrom")
                        .HasColumnType("int")
                        .HasColumnName("TermFrom");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyMemberCouncilTerm", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyPersonTemps.TbCompanyPersonTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("BranchCode");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FromDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<decimal?>("OwnerValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("OwnerValue");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PersonId");

                    b.Property<decimal?>("PersonalSharePercentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PersonalSharePercentage");

                    b.Property<decimal?>("PersonalValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PersonalValue");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PositionCode");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("PositionId");

                    b.Property<byte?>("PositionType")
                        .HasColumnType("tinyint")
                        .HasColumnName("PositionType");

                    b.Property<decimal?>("RepresentativePercentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RepresentativePercentage");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ToDate");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<int?>("idCompanyPerson")
                        .HasColumnType("int")
                        .HasColumnName("idCompanyPerson");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyPerson_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyPersons.TbCompanyPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("BranchCode");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FromDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<decimal?>("OwnerValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("OwnerValue");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PersonId");

                    b.Property<decimal?>("PersonalSharePercentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PersonalSharePercentage");

                    b.Property<decimal?>("PersonalValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PersonalValue");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PositionCode");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("PositionId");

                    b.Property<byte?>("PostionType")
                        .HasColumnType("tinyint")
                        .HasColumnName("PostionType");

                    b.Property<decimal?>("RepresentativePercentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RepresentativePercentage");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ToDate");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyPerson", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyStockTemps.TbCompanyStockTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CharteredCapital")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CharteredCapital");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CompanyCode");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsPublicCompany")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublicCompany");

                    b.Property<int?>("ListedShare")
                        .HasColumnType("int")
                        .HasColumnName("ListedShare");

                    b.Property<decimal?>("ParValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ParValue");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate");

                    b.Property<string>("StockExchange")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("StockExchange");

                    b.Property<int?>("TotalShare")
                        .HasColumnType("int")
                        .HasColumnName("TotalShare");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyStock_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyStocks.TbCompanyStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CharteredCapital")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CharteredCapital");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CompanyCode");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsPublicCompany")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublicCompany");

                    b.Property<int?>("ListedShare")
                        .HasColumnType("int")
                        .HasColumnName("ListedShare");

                    b.Property<decimal?>("ParValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ParValue");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate");

                    b.Property<string>("StockExchange")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("StockExchange");

                    b.Property<int?>("TotalShare")
                        .HasColumnType("int")
                        .HasColumnName("TotalShare");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompanyStock", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbCompanyTemps.TbCompanyTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BravoCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("BravoCode");

                    b.Property<string>("BriefName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BriefName");

                    b.Property<decimal?>("CharteredCapital")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CharteredCapital");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("CompanyType");

                    b.Property<string>("ConsolidateNoted")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConsolidateNoted");

                    b.Property<decimal?>("ConsolidatedShareholding")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ConsolidatedShareholding");

                    b.Property<string>("ContactDept1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactDept1");

                    b.Property<string>("ContactDept2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactDept2");

                    b.Property<string>("ContactInfo_01")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactInfo_01");

                    b.Property<string>("ContactInfo_02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactInfo_02");

                    b.Property<string>("ContactInfo_03")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactInfo_03");

                    b.Property<string>("ContactInfo_04")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactInfo_04");

                    b.Property<string>("ContactInfo_05")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactInfo_05");

                    b.Property<string>("ContactInfo_06")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ContactInfo_06");

                    b.Property<string>("ContactMail1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactMail1");

                    b.Property<string>("ContactMail2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactMail2");

                    b.Property<string>("ContactName1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactName1");

                    b.Property<string>("ContactName2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactName2");

                    b.Property<string>("ContactPhone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactPhone1");

                    b.Property<string>("ContactPhone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactPhone2");

                    b.Property<string>("ContactPosition1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactPosition1");

                    b.Property<string>("ContactPosition2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactPosition2");

                    b.Property<decimal?>("DirectShareholding")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DirectShareholding");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit")
                        .HasColumnName("IsGroup");

                    b.Property<bool?>("IsPublicCompany")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublicCompany");

                    b.Property<DateTime?>("LatestAmendment")
                        .HasColumnType("datetime2")
                        .HasColumnName("LatestAmendment");

                    b.Property<string>("LegacyCode")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("LegacyCode");

                    b.Property<string>("LegalRepresent")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LegalRepresent");

                    b.Property<string>("License")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("License");

                    b.Property<string>("LicenseNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LicenseNo");

                    b.Property<decimal?>("ListedShare")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ListedShare");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.Property<string>("Name_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name_EN");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<int?>("ParValue")
                        .HasColumnType("int")
                        .HasColumnName("ParValue");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentId");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate");

                    b.Property<DateTime?>("RegistrationDate0")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate0");

                    b.Property<byte?>("RegistrationOrder")
                        .HasColumnType("tinyint")
                        .HasColumnName("RegistrationOrder");

                    b.Property<string>("StockCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("StockCode");

                    b.Property<string>("StockExchange")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("StockExchange");

                    b.Property<DateTime?>("StockRegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StockRegistrationDate");

                    b.Property<decimal?>("TotalShare")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalShare");

                    b.Property<decimal?>("VotingRightDirect")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VotingRightDirect");

                    b.Property<decimal?>("VotingRightTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VotingRightTotal");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<int>("idCompany")
                        .HasColumnType("int")
                        .HasColumnName("idCompany");

                    b.Property<double?>("latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double?>("longtitude")
                        .HasColumnType("float")
                        .HasColumnName("longtitude");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbCompany_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbConfigRetirementTimes.TbConfigRetirementTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Code");

                    b.Property<int?>("DayNumb")
                        .HasColumnType("int")
                        .HasColumnName("DayNumb");

                    b.Property<int?>("MonthNumb")
                        .HasColumnType("int")
                        .HasColumnName("MonthNumb");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Note");

                    b.Property<int?>("YearNumb")
                        .HasColumnType("int")
                        .HasColumnName("YearNumb");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbConfigRetirementTime", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbContactTemps.TbContactTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactDept")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactDept");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactEmail");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactName");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactPhone");

                    b.Property<string>("ContactPosition")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactPosition");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<int>("companyid")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbContact_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbContacts.TbContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactDept")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactDept");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactEmail");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactName");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactPhone");

                    b.Property<string>("ContactPosition")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactPosition");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<int>("companyid")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbContact", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbFileUploadTemps.TbFileUploadTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<int?>("UserUpload")
                        .HasColumnType("int")
                        .HasColumnName("UserUpload");

                    b.Property<int?>("companyId")
                        .HasColumnType("int")
                        .HasColumnName("companyId");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<string>("fileLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileLink");

                    b.Property<string>("fileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileName");

                    b.Property<string>("fullFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fullFileName");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<int?>("personId")
                        .HasColumnType("int")
                        .HasColumnName("personId");

                    b.Property<DateTime?>("uploadDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("uploadDate");

                    b.HasKey("Id");

                    b.ToTable("tbFileUpload_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbFileUploads.TbFileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<int?>("UserUpload")
                        .HasColumnType("int")
                        .HasColumnName("UserUpload");

                    b.Property<int?>("companyId")
                        .HasColumnType("int")
                        .HasColumnName("companyId");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<string>("fileLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileLink");

                    b.Property<string>("fileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileName");

                    b.Property<string>("fullFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fullFileName");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<int?>("personId")
                        .HasColumnType("int")
                        .HasColumnName("personId");

                    b.Property<DateTime?>("uploadDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("uploadDate");

                    b.HasKey("Id");

                    b.ToTable("tbFileUpload", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbHisBreweries.TbHisBrewery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryAdress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BreweryAdress");

                    b.Property<string>("BreweryName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("BreweryName");

                    b.Property<string>("BreweryName_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("BreweryName_EN");

                    b.Property<string>("BriefName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BriefName");

                    b.Property<decimal?>("CapacityVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CapacityVolume");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime?>("DateSendMail")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateSendMail");

                    b.Property<decimal?>("DeliveryVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DeliveryVolume");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<int>("IdBrewery")
                        .HasColumnType("int")
                        .HasColumnName("IdBrewery");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsSendMail")
                        .HasColumnType("bit")
                        .HasColumnName("IsSendMail");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Note");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbHisBrewery", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbHisBreweryDeliveryVolumes.TbHisBreweryDeliveryVolume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BreweryCode");

                    b.Property<int?>("BreweryId")
                        .HasColumnType("int")
                        .HasColumnName("BreweryId");

                    b.Property<DateTime?>("DateSendMail")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateSendMail");

                    b.Property<decimal?>("DeliveryVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DeliveryVolume");

                    b.Property<int>("IdBreweryDeliveryVolume")
                        .HasColumnType("int")
                        .HasColumnName("IdBreweryDeliveryVolume");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool?>("IsSendMail")
                        .HasColumnType("bit")
                        .HasColumnName("IsSendMail");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbHisBreweryDeliveryVolume", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbHisBrewerySkus.TbHisBrewerySku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreweryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BreweryCode");

                    b.Property<int?>("BreweryId")
                        .HasColumnType("int")
                        .HasColumnName("BreweryId");

                    b.Property<DateTime?>("DateSendMail")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateSendMail");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<int>("IdBrewerySKU")
                        .HasColumnType("int")
                        .HasColumnName("IdBrewerySKU");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsSendMail")
                        .HasColumnType("bit")
                        .HasColumnName("IsSendMail");

                    b.Property<decimal?>("ProductionVolume")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ProductionVolume");

                    b.Property<string>("SKUCode")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("SKUCode");

                    b.Property<int?>("SKUId")
                        .HasColumnType("int")
                        .HasColumnName("SKUId");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbHisBrewerySKU", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbHisCompanies.TbHisCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BriefName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BriefName");

                    b.Property<decimal?>("CharteredCapital")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CharteredCapital");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("CompanyType");

                    b.Property<string>("ConsolidateNoted")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConsolidateNoted");

                    b.Property<decimal?>("ConsolidatedShareholding")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ConsolidatedShareholding");

                    b.Property<string>("ContactDept1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactDept1");

                    b.Property<string>("ContactDept2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactDept2");

                    b.Property<string>("ContactInfo_01")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactInfo_01");

                    b.Property<string>("ContactInfo_02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactInfo_02");

                    b.Property<string>("ContactInfo_03")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactInfo_03");

                    b.Property<string>("ContactInfo_04")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactInfo_04");

                    b.Property<string>("ContactInfo_05")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactInfo_05");

                    b.Property<string>("ContactInfo_06")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ContactInfo_06");

                    b.Property<string>("ContactMail1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactMail1");

                    b.Property<string>("ContactMail2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactMail2");

                    b.Property<string>("ContactName1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactName1");

                    b.Property<string>("ContactName2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ContactName2");

                    b.Property<string>("ContactPhone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactPhone1");

                    b.Property<string>("ContactPhone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactPhone2");

                    b.Property<string>("ContactPosition1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactPosition1");

                    b.Property<string>("ContactPosition2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ContactPosition2");

                    b.Property<DateTime?>("DateSendMail")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateSendMail");

                    b.Property<decimal?>("DirectShareholding")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DirectShareholding");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<int>("IdCompany")
                        .HasColumnType("int")
                        .HasColumnName("IdCompany");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit")
                        .HasColumnName("IsGroup");

                    b.Property<bool?>("IsPublicCompany")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublicCompany");

                    b.Property<bool?>("IsSendMail")
                        .HasColumnType("bit")
                        .HasColumnName("IsSendMail");

                    b.Property<DateTime?>("LatestAmendment")
                        .HasColumnType("datetime2")
                        .HasColumnName("LatestAmendment");

                    b.Property<string>("LegalRepresent")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LegalRepresent");

                    b.Property<string>("License")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("License");

                    b.Property<string>("LicenseNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LicenseNo");

                    b.Property<decimal?>("ListedShare")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ListedShare");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.Property<string>("Name_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name_EN");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<int?>("ParValue")
                        .HasColumnType("int")
                        .HasColumnName("ParValue");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentId");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate");

                    b.Property<DateTime?>("RegistrationDate0")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationDate0");

                    b.Property<byte?>("RegistrationOrder")
                        .HasColumnType("tinyint")
                        .HasColumnName("RegistrationOrder");

                    b.Property<string>("StockCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("StockCode");

                    b.Property<string>("StockExchange")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("StockExchange");

                    b.Property<DateTime?>("StockRegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StockRegistrationDate");

                    b.Property<decimal?>("TotalShare")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalShare");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.Property<decimal?>("VotingRightDirect")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VotingRightDirect");

                    b.Property<decimal?>("VotingRightTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VotingRightTotal");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<double?>("latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double?>("longtitude")
                        .HasColumnType("float")
                        .HasColumnName("longtitude");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbHisCompany", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbHisCompanyPersons.TbHisCompanyPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("BranchCode");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime?>("DateSendMail")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateSendMail");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FromDate");

                    b.Property<int>("IdCompanyPerson")
                        .HasColumnType("int")
                        .HasColumnName("IdCompanyPerson");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsSendMail")
                        .HasColumnType("bit")
                        .HasColumnName("IsSendMail");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<decimal?>("OwnerValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("OwnerValue");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PersonId");

                    b.Property<decimal?>("PersonalSharePercentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PersonalSharePercentage");

                    b.Property<decimal?>("PersonalValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PersonalValue");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PositionCode");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("PositionId");

                    b.Property<decimal?>("RepresentativePercentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RepresentativePercentage");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ToDate");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbHisCompanyPerson", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbHisLogPrintings.TbHisLogPrinting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("CompanyCode");

                    b.Property<DateTime?>("DateSendMail")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateSendMail");

                    b.Property<string>("FileLanguage")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("FileLanguage");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool?>("IsPrinting")
                        .HasColumnType("bit")
                        .HasColumnName("IsPrinting");

                    b.Property<bool?>("IsSendMail")
                        .HasColumnType("bit")
                        .HasColumnName("IsSendMail");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.Property<string>("UserName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.ToTable("tbHisLogPrinting", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbHisPersons.TbHisPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Address");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BirthDate");

                    b.Property<string>("BirthPlace")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("BirthPlace");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime?>("DateSendMail")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateSendMail");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Email");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Ethnicity");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("FullName");

                    b.Property<string>("Gender")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("Gender");

                    b.Property<DateTime?>("IDCardDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("IDCardDate");

                    b.Property<string>("IDCardNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IDCardNo");

                    b.Property<string>("IdCardIssuePlace")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("IdCardIssuePlace");

                    b.Property<int>("IdPerson")
                        .HasColumnType("int")
                        .HasColumnName("IdPerson");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsCheckRetirement")
                        .HasColumnType("bit")
                        .HasColumnName("IsCheckRetirement");

                    b.Property<bool?>("IsCheckTermEnd")
                        .HasColumnType("bit")
                        .HasColumnName("IsCheckTermEnd");

                    b.Property<bool?>("IsSendMail")
                        .HasColumnType("bit")
                        .HasColumnName("IsSendMail");

                    b.Property<string>("NationalityCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("NationalityCode");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<string>("OldCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("OldCode");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone");

                    b.Property<string>("Religion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Religion");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbHisPerson", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbInfoUpdates.TbInfoUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("ChangeSetId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ChangeSetId");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ColumnName");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Command");

                    b.Property<string>("Comment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Comment");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GroupName");

                    b.Property<int>("IsActive")
                        .HasColumnType("int")
                        .HasColumnName("IsActive");

                    b.Property<string>("LastValue")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("LastValue");

                    b.Property<string>("NewValue")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("NewValue");

                    b.Property<int>("RowId")
                        .HasColumnType("int")
                        .HasColumnName("RowId");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int")
                        .HasColumnName("ScreenId");

                    b.Property<string>("ScreenName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ScreenName");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TableName");

                    b.Property<DateTime?>("TimeAssessment")
                        .HasColumnType("datetime2")
                        .HasColumnName("TimeAssessment");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbInfoUpdate", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbInvestDetails.TbInvestDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DocDate");

                    b.Property<string>("DocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DocNo");

                    b.Property<int>("InvestType")
                        .HasColumnType("int")
                        .HasColumnName("InvestType");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentId");

                    b.Property<int?>("ShareNum")
                        .HasColumnType("int")
                        .HasColumnName("ShareNum");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ShareValue");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbInvestDetail", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbInvestPersons.TbInvestPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FromDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<int?>("OwnerValue")
                        .HasColumnType("int")
                        .HasColumnName("OwnerValue");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentId");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PersonId");

                    b.Property<int?>("PersonalValue")
                        .HasColumnType("int")
                        .HasColumnName("PersonalValue");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbInvestPerson", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbInvests.TbInvest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BranchCode");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchId");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CompanyCode");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<bool?>("InvestGroup")
                        .HasColumnType("bit")
                        .HasColumnName("InvestGroup");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<int?>("ShareNumTotal")
                        .HasColumnType("int")
                        .HasColumnName("ShareNumTotal");

                    b.Property<decimal?>("ShareValueTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ShareValueTotal");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbInvest", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLandInfoTemps.TbLandInfoTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Address");

                    b.Property<decimal?>("Area")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Area");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpiryDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("IssueDate");

                    b.Property<string>("Payment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Payment");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remark");

                    b.Property<string>("SupportingDocument")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SupportingDocument");

                    b.Property<string>("TypeOfLand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TypeOfLand");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbLandInfo_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLandInfos.TbLandInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Address");

                    b.Property<decimal?>("Area")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Area");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpiryDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("IssueDate");

                    b.Property<string>("Payment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Payment");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remark");

                    b.Property<string>("SupportingDocument")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SupportingDocument");

                    b.Property<string>("TypeOfLand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TypeOfLand");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbLandInfo", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLogErrors.TbLogError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassLog")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ClassLog");

                    b.Property<string>("FunctionLog")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FunctionLog");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IPAddress");

                    b.Property<string>("ReasonFailed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReasonFailed");

                    b.Property<DateTime>("TimeLog")
                        .HasColumnType("datetime2")
                        .HasColumnName("TimeLog");

                    b.Property<int>("UserLog")
                        .HasColumnType("int")
                        .HasColumnName("UserLog");

                    b.HasKey("Id");

                    b.ToTable("tbLogError", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLogExportDatas.TbLogExportData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit")
                        .HasColumnName("IsSuccess");

                    b.Property<string>("ReasonExportFailed")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReasonExportFailed");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TableName");

                    b.Property<DateTime>("TimeExport")
                        .HasColumnType("datetime2")
                        .HasColumnName("TimeExport");

                    b.Property<int>("UserExport")
                        .HasColumnType("int")
                        .HasColumnName("UserExport");

                    b.HasKey("Id");

                    b.ToTable("tbLogExportData", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLogLogins.TbLogLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IPTracking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IPTracking");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LoginDate");

                    b.Property<bool?>("StatusLogin")
                        .HasColumnType("bit")
                        .HasColumnName("StatusLogin");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.ToTable("tbLogLogin", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLogPrintings.TbLogPrinting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("companyCode")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("companyCode");

                    b.Property<string>("fileLanguage")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fileLanguage");

                    b.Property<bool?>("isPrinting")
                        .HasColumnType("bit")
                        .HasColumnName("isPrinting");

                    b.Property<DateTime?>("printTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("printTime");

                    b.Property<string>("userName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("userName");

                    b.HasKey("Id");

                    b.ToTable("tbLogPrinting", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLogRefeshAccounts.TbLogRefeshAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AccessToken");

                    b.Property<string>("FailedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FailedReason");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit")
                        .HasColumnName("IsSuccess");

                    b.Property<DateTime>("TimeRefesh")
                        .HasColumnType("datetime2")
                        .HasColumnName("TimeRefesh");

                    b.Property<string>("UseRefesh")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UseRefesh");

                    b.HasKey("Id");

                    b.ToTable("tbLogRefeshAccount", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLogSendEmailRetirements.TbLogSendEmailRetirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateSendEmail")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateSendEmail");

                    b.Property<bool?>("IsSendEmail")
                        .HasColumnType("bit")
                        .HasColumnName("IsSendEmail");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.Property<int?>("idCompany")
                        .HasColumnType("int")
                        .HasColumnName("idCompany");

                    b.Property<int?>("idPerson")
                        .HasColumnType("int")
                        .HasColumnName("idPerson");

                    b.HasKey("Id");

                    b.ToTable("tbLogSendEmailRetirement", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLogSendEmails.TbLogSendEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FailedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FailedReason");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit")
                        .HasColumnName("IsSuccess");

                    b.Property<DateTime>("TimeSend")
                        .HasColumnType("datetime2")
                        .HasColumnName("TimeSend");

                    b.Property<string>("TypeEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TypeEmail");

                    b.Property<string>("UserSend")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserSend");

                    b.HasKey("Id");

                    b.ToTable("tbLogSendEmail", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbLogSyncUats.TbLogSyncUat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit")
                        .HasColumnName("IsSuccess");

                    b.Property<string>("ReasonExportFailed")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReasonExportFailed");

                    b.Property<DateTime>("TimeExport")
                        .HasColumnType("datetime2")
                        .HasColumnName("TimeExport");

                    b.Property<int>("UserExport")
                        .HasColumnType("int")
                        .HasColumnName("UserExport");

                    b.HasKey("Id");

                    b.ToTable("tbLogSyncUAT", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbMenus.TbMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ControlName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ControlName");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("create_user")
                        .HasColumnType("int")
                        .HasColumnName("create_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbMenu", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbNationalities.TbNationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("Code");

                    b.Property<string>("Code2")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("Code2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name_en")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name_en");

                    b.Property<string>("Name_vn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name_vn");

                    b.HasKey("Id");

                    b.ToTable("tbNationality", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbNationalityTemps.TbNationalityTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("Code");

                    b.Property<string>("Code2")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("Code2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name_en")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name_en");

                    b.Property<string>("Name_vn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name_vn");

                    b.HasKey("Id");

                    b.ToTable("tbNationality_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbPersonTemps.TbPersonTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Address");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BirthDate");

                    b.Property<string>("BirthPlace")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("BirthPlace");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Email");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Ethnicity");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("FullName");

                    b.Property<string>("Gender")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("Gender");

                    b.Property<DateTime?>("IDCardDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("IDCardDate");

                    b.Property<string>("IDCardNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IDCardNo");

                    b.Property<string>("IdCardIssuePlace")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("IdCardIssuePlace");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsCheckRetirement")
                        .HasColumnType("bit")
                        .HasColumnName("IsCheckRetirement");

                    b.Property<bool?>("IsCheckTermEnd")
                        .HasColumnType("bit")
                        .HasColumnName("IsCheckTermEnd");

                    b.Property<string>("NationalityCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("NationalityCode");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<string>("OldCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("OldCode");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone");

                    b.Property<string>("Religion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Religion");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<int?>("idPerson")
                        .HasColumnType("int")
                        .HasColumnName("idPerson");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbPerson_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbPersons.TbPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Address");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BirthDate");

                    b.Property<string>("BirthPlace")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("BirthPlace");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Email");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Ethnicity");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("FullName");

                    b.Property<string>("Gender")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("Gender");

                    b.Property<DateTime?>("IDCardDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("IDCardDate");

                    b.Property<string>("IDCardNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IDCardNo");

                    b.Property<string>("IdCardIssuePlace")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("IdCardIssuePlace");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsCheckRetirement")
                        .HasColumnType("bit")
                        .HasColumnName("IsCheckRetirement");

                    b.Property<bool?>("IsCheckTermEnd")
                        .HasColumnType("bit")
                        .HasColumnName("IsCheckTermEnd");

                    b.Property<string>("NationalityCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("NationalityCode");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Note");

                    b.Property<string>("OldCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("OldCode");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone");

                    b.Property<string>("Religion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Religion");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbPerson", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbPositions.TbPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.Property<string>("Name_EN")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name_EN");

                    b.Property<int?>("OrderNumb")
                        .HasColumnType("int")
                        .HasColumnName("OrderNumb");

                    b.Property<byte?>("PositionType")
                        .HasColumnType("tinyint")
                        .HasColumnName("PositionType");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("ctr_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("ctr_date");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbPosition", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbRoles.TbRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbRole", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbSkus.TbSku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandCode")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("BrandCode");

                    b.Property<string>("Code")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Code");

                    b.Property<int?>("ExpiryDate")
                        .HasColumnType("int")
                        .HasColumnName("ExpiryDate");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("ItemBaseType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ItemBaseType");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Name");

                    b.Property<string>("Name_EN")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Name_EN");

                    b.Property<int?>("PackQuantity")
                        .HasColumnType("int")
                        .HasColumnName("PackQuantity");

                    b.Property<decimal?>("PackSize")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PackSize");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Unit");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Weight");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbSKU", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbStockPrices.TbStockPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BuyPrice1")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BuyPrice1");

                    b.Property<decimal?>("BuyPrice2")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BuyPrice2");

                    b.Property<decimal?>("BuyPrice3")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BuyPrice3");

                    b.Property<decimal?>("BuyQty1")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BuyQty1");

                    b.Property<decimal?>("BuyQty2")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BuyQty2");

                    b.Property<decimal?>("BuyQty3")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BuyQty3");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<decimal?>("LimitDownPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("LimitDownPrice");

                    b.Property<decimal?>("LimitUpPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("LimitUpPrice");

                    b.Property<decimal?>("ReferencePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ReferencePrice");

                    b.Property<decimal?>("SalePrice1")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SalePrice1");

                    b.Property<decimal?>("SalePrice2")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SalePrice2");

                    b.Property<decimal?>("SalePrice3")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SalePrice3");

                    b.Property<decimal?>("SaleQty1")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SaleQty1");

                    b.Property<decimal?>("SaleQty2")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SaleQty2");

                    b.Property<decimal?>("SaleQty3")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SaleQty3");

                    b.Property<string>("StockCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("StockCode");

                    b.Property<DateTime?>("StockDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StockDate");

                    b.Property<decimal?>("TotalQty")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalQty");

                    b.Property<decimal?>("TransactionPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TransactionPrice");

                    b.Property<decimal?>("TransactionQty")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TransactionQty");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.HasKey("Id");

                    b.ToTable("tbStockPrice", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbTerms.TbTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchId");

                    b.Property<string>("Description")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Description");

                    b.Property<int?>("FromYear")
                        .HasColumnType("int")
                        .HasColumnName("FromYear");

                    b.Property<string>("TermCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("TermCode");

                    b.Property<int?>("ToYear")
                        .HasColumnType("int")
                        .HasColumnName("ToYear");

                    b.HasKey("Id");

                    b.ToTable("tbTerm", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbTimeScripts.TbTimeScript", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code");

                    b.Property<int?>("Day")
                        .HasColumnType("int")
                        .HasColumnName("Day");

                    b.Property<int?>("Hour")
                        .HasColumnType("int")
                        .HasColumnName("Hour");

                    b.Property<int?>("Minute")
                        .HasColumnType("int")
                        .HasColumnName("Minute");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("Month");

                    b.Property<int?>("Second")
                        .HasColumnType("int")
                        .HasColumnName("Second");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("tbTimeScript", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbUserInRoles.TbUserInRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbUserInRole", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbUserMappingBreweries.TbUserMappingBrewery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<int?>("breweryid")
                        .HasColumnType("int")
                        .HasColumnName("breweryid");

                    b.Property<int?>("userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("tbUserMappingBrewery", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbUserMappingCompanies.TbUserMappingCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<int?>("companyid")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.Property<int?>("userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("tbUserMappingCompany", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbUserMappingPersons.TbUserMappingPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<int?>("personid")
                        .HasColumnType("int")
                        .HasColumnName("personid");

                    b.Property<int?>("userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("tbUserMappingPerson", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TbUsers.TbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<byte?>("DocStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocStatus");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FullName");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("UserName");

                    b.Property<string>("UserPrincipalName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserPrincipalName");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tbUsers", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TsClassTemps.TsClassTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code");

                    b.Property<string>("Code_Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("Code_Type");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.Property<string>("Name_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name_EN");

                    b.Property<string>("ParentCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ParentCode");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tsClass_Temp", (string)null);
                });

            modelBuilder.Entity("Sabeco_Factsheet.TsClasses.TsClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code");

                    b.Property<string>("Code_Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("Code_Type");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.Property<string>("Name_EN")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name_EN");

                    b.Property<string>("ParentCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ParentCode");

                    b.Property<DateTime?>("crt_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("crt_date");

                    b.Property<int?>("crt_user")
                        .HasColumnType("int")
                        .HasColumnName("crt_user");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("mod_date");

                    b.Property<int?>("mod_user")
                        .HasColumnType("int")
                        .HasColumnName("mod_user");

                    b.HasKey("Id");

                    b.ToTable("tsClass", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)")
                        .HasColumnName("ApplicationName");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("BrowserInfo");

                    b.Property<string>("ClientId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ClientId");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ClientIpAddress");

                    b.Property<string>("ClientName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ClientName");

                    b.Property<string>("Comments")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Comments");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CorrelationId");

                    b.Property<string>("Exceptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int")
                        .HasColumnName("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HttpMethod")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("HttpMethod");

                    b.Property<int?>("HttpStatusCode")
                        .HasColumnType("int")
                        .HasColumnName("HttpStatusCode");

                    b.Property<Guid?>("ImpersonatorTenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ImpersonatorTenantId");

                    b.Property<string>("ImpersonatorTenantName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ImpersonatorTenantName");

                    b.Property<Guid?>("ImpersonatorUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ImpersonatorUserId");

                    b.Property<string>("ImpersonatorUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ImpersonatorUserName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("TenantName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("TenantName");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Url");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ExecutionTime");

                    b.HasIndex("TenantId", "UserId", "ExecutionTime");

                    b.ToTable("AbpAuditLogs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLogAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditLogId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AuditLogId");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int")
                        .HasColumnName("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExecutionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("MethodName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("MethodName");

                    b.Property<string>("Parameters")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Parameters");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ServiceName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AuditLogId");

                    b.HasIndex("TenantId", "ServiceName", "MethodName", "ExecutionTime");

                    b.ToTable("AbpAuditLogActions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditLogId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AuditLogId");

                    b.Property<DateTime>("ChangeTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ChangeTime");

                    b.Property<byte>("ChangeType")
                        .HasColumnType("tinyint")
                        .HasColumnName("ChangeType");

                    b.Property<string>("EntityId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("EntityId");

                    b.Property<Guid?>("EntityTenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityTypeFullName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("EntityTypeFullName");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AuditLogId");

                    b.HasIndex("TenantId", "EntityTypeFullName", "EntityId");

                    b.ToTable("AbpEntityChanges", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityPropertyChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityChangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NewValue")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("NewValue");

                    b.Property<string>("OriginalValue")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("OriginalValue");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("PropertyName");

                    b.Property<string>("PropertyTypeFullName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("PropertyTypeFullName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeId");

                    b.ToTable("AbpEntityPropertyChanges", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.BackgroundJobs.BackgroundJobRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsAbandoned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("JobArgs")
                        .IsRequired()
                        .HasMaxLength(1048576)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastTryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextTryTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)15);

                    b.Property<short>("TryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("Id");

                    b.HasIndex("IsAbandoned", "NextTryTime");

                    b.ToTable("AbpBackgroundJobs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.BlobStoring.Database.DatabaseBlob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid>("ContainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .HasMaxLength(2147483647)
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ContainerId");

                    b.HasIndex("TenantId", "ContainerId", "Name");

                    b.ToTable("AbpBlobs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.BlobStoring.Database.DatabaseBlobContainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpBlobContainers", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AllowedProviders")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsAvailableToHost")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibleToClients")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ParentName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ValueType")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("GroupName");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpFeatures", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureGroupDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpFeatureGroups", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("[ProviderName] IS NOT NULL AND [ProviderKey] IS NOT NULL");

                    b.ToTable("AbpFeatureValues", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Gdpr.GdprInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Data");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Provider");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("GdprInfo", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Gdpr.GdprRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime>("ReadyTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReadyTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GdprRequests", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityClaimType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Regex")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("RegexDescription")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("ValueType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AbpClaimTypes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityLinkUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SourceTenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SourceUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TargetTenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SourceUserId", "SourceTenantId", "TargetUserId", "TargetTenantId")
                        .IsUnique()
                        .HasFilter("[SourceTenantId] IS NOT NULL AND [TargetTenantId] IS NOT NULL");

                    b.ToTable("AbpLinkUsers", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublic");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit")
                        .HasColumnName("IsStatic");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName");

                    b.ToTable("AbpRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRoleClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AbpRoleClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentitySecurityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ClientId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Identity")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("TenantName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Action");

                    b.HasIndex("TenantId", "ApplicationName");

                    b.HasIndex("TenantId", "Identity");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpSecurityLogs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentitySession", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DeviceInfo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("IpAddresses")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("LastAccessed")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("SignedIn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Device");

                    b.HasIndex("SessionId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpSessions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Email");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("EmailConfirmed");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsExternal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsExternal");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTimeOffset?>("LastPasswordChangeTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NormalizedEmail");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NormalizedUserName");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("SecurityStamp");

                    b.Property<bool>("ShouldChangePasswordOnNextLogin")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Surname");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("NormalizedEmail");

                    b.HasIndex("NormalizedUserName");

                    b.HasIndex("UserName");

                    b.ToTable("AbpUsers", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AbpUserClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserDelegation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SourceUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("AbpUserDelegations", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserLogin", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(196)
                        .HasColumnType("nvarchar(196)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("UserId", "LoginProvider");

                    b.HasIndex("LoginProvider", "ProviderKey");

                    b.ToTable("AbpUserLogins", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserOrganizationUnit", b =>
                {
                    b.Property<Guid>("OrganizationUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("OrganizationUnitId", "UserId");

                    b.HasIndex("UserId", "OrganizationUnitId");

                    b.ToTable("AbpUserOrganizationUnits", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId", "UserId");

                    b.ToTable("AbpUserRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AbpUserTokens", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("nvarchar(95)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("DisplayName");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ParentId");

                    b.ToTable("AbpOrganizationUnits", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnitRole", b =>
                {
                    b.Property<Guid>("OrganizationUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("OrganizationUnitId", "RoleId");

                    b.HasIndex("RoleId", "OrganizationUnitId");

                    b.ToTable("AbpOrganizationUnitRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.LanguageManagement.External.LocalizationResourceRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseResources")
                        .HasMaxLength(1280)
                        .HasColumnType("nvarchar(1280)")
                        .HasColumnName("BaseResources");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("DefaultCulture")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("DefaultCulture");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Name");

                    b.Property<string>("SupportedCultures")
                        .HasMaxLength(640)
                        .HasColumnType("nvarchar(640)")
                        .HasColumnName("SupportedCultures");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpLocalizationResources", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.LanguageManagement.External.LocalizationTextRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CultureName");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ResourceName");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1048576)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ResourceName", "CultureName")
                        .IsUnique();

                    b.ToTable("AbpLocalizationTexts", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.LanguageManagement.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CultureName");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("DisplayName");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("IsEnabled");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("UiCultureName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("UiCultureName");

                    b.HasKey("Id");

                    b.HasIndex("CultureName");

                    b.ToTable("AbpLanguages", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.LanguageManagement.LanguageText", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CultureName");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("Name");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ResourceName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ResourceName", "CultureName");

                    b.ToTable("AbpLanguageTexts", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Applications.OpenIddictApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ConsentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("JsonWebKeySet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LogoUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostLogoutRedirectUris")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedirectUris")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Settings")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("OpenIddictApplications", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scopes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId", "Status", "Subject", "Type");

                    b.ToTable("OpenIddictAuthorizations", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Scopes.OpenIddictScope", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resources")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("OpenIddictScopes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Tokens.OpenIddictToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuthorizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RedemptionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationId");

                    b.HasIndex("ReferenceId");

                    b.HasIndex("ApplicationId", "Status", "Subject", "Type");

                    b.ToTable("OpenIddictTokens", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<byte>("MultiTenancySide")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ParentName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Providers")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("StateCheckers")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("GroupName");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpPermissions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionGrant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL");

                    b.ToTable("AbpPermissionGrants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionGroupDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpPermissionGroups", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.SettingManagement.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("[ProviderName] IS NOT NULL AND [ProviderKey] IS NOT NULL");

                    b.ToTable("AbpSettings", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.SettingManagement.SettingDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsEncrypted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInherited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibleToClients")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Providers")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpSettingDefinitions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateContent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CultureName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("AbpTextTemplateContents", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateDefinitionContentRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DefinitionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DefinitionId");

                    b.ToTable("AbpTextTemplateDefinitionContentRecords", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DefaultCultureName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsInlineLocalized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLayout")
                        .HasColumnType("bit");

                    b.Property<string>("Layout")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LocalizationResourceName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("RenderEngine")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpTextTemplateDefinitionRecords", (string)null);
                });

            modelBuilder.Entity("Volo.Saas.Editions.Edition", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("DisplayName");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName");

                    b.ToTable("SaasEditions", (string)null);
                });

            modelBuilder.Entity("Volo.Saas.Tenants.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActivationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("ActivationState")
                        .HasColumnType("tinyint");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("EditionEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("NormalizedName");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("NormalizedName");

                    b.ToTable("SaasTenants", (string)null);
                });

            modelBuilder.Entity("Volo.Saas.Tenants.TenantConnectionString", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Name");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Value");

                    b.HasKey("TenantId", "Name");

                    b.ToTable("SaasTenantConnectionStrings", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLogAction", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.AuditLog", null)
                        .WithMany("Actions")
                        .HasForeignKey("AuditLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.AuditLog", null)
                        .WithMany("EntityChanges")
                        .HasForeignKey("AuditLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityPropertyChange", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.EntityChange", null)
                        .WithMany("PropertyChanges")
                        .HasForeignKey("EntityChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.BlobStoring.Database.DatabaseBlob", b =>
                {
                    b.HasOne("Volo.Abp.BlobStoring.Database.DatabaseBlobContainer", null)
                        .WithMany()
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Gdpr.GdprInfo", b =>
                {
                    b.HasOne("Volo.Abp.Gdpr.GdprRequest", null)
                        .WithMany("Infos")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRoleClaim", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserClaim", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserLogin", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserOrganizationUnit", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("OrganizationUnits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserRole", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserToken", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnitRole", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany("Roles")
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization", b =>
                {
                    b.HasOne("Volo.Abp.OpenIddict.Applications.OpenIddictApplication", null)
                        .WithMany()
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Tokens.OpenIddictToken", b =>
                {
                    b.HasOne("Volo.Abp.OpenIddict.Applications.OpenIddictApplication", null)
                        .WithMany()
                        .HasForeignKey("ApplicationId");

                    b.HasOne("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization", null)
                        .WithMany()
                        .HasForeignKey("AuthorizationId");
                });

            modelBuilder.Entity("Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateDefinitionContentRecord", b =>
                {
                    b.HasOne("Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateDefinitionRecord", null)
                        .WithMany()
                        .HasForeignKey("DefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Saas.Tenants.TenantConnectionString", b =>
                {
                    b.HasOne("Volo.Saas.Tenants.Tenant", null)
                        .WithMany("ConnectionStrings")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLog", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("EntityChanges");
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.Navigation("PropertyChanges");
                });

            modelBuilder.Entity("Volo.Abp.Gdpr.GdprRequest", b =>
                {
                    b.Navigation("Infos");
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRole", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("OrganizationUnits");

                    b.Navigation("Roles");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Volo.Saas.Tenants.Tenant", b =>
                {
                    b.Navigation("ConnectionStrings");
                });
#pragma warning restore 612, 618
        }
    }
}
